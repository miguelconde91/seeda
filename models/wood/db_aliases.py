# coding=utf-8
# Autocomplete helpers for DAL tables and fields.
# Generated by wood.py
# Please do not modify this module manually.

if 0:
    from gluon.dal.base import DAL, Table, Field
    from gluon.dal.objects import Rows

    class db(DAL):

        # Table: 'auth_user'
        class auth_user(Table):
            id = Field()
            first_name = Field()
            last_name = Field()
            email = Field()
            username = Field()
            password = Field()
            registration_key = Field()
            reset_password_key = Field()
            registration_id = Field()

        auth_user = auth_user

        # Table: 'auth_group'
        class auth_group(Table):
            id = Field()
            role = Field()
            description = Field()

        auth_group = auth_group

        # Table: 'auth_membership'
        class auth_membership(Table):
            id = Field()
            user_id = Field()
            group_id = Field()

        auth_membership = auth_membership

        # Table: 'auth_permission'
        class auth_permission(Table):
            id = Field()
            group_id = Field()
            name = Field()
            table_name = Field()
            record_id = Field()

        auth_permission = auth_permission

        # Table: 'auth_event'
        class auth_event(Table):
            id = Field()
            time_stamp = Field()
            client_ip = Field()
            user_id = Field()
            origin = Field()
            description = Field()

        auth_event = auth_event

        # Table: 'auth_cas'
        class auth_cas(Table):
            id = Field()
            user_id = Field()
            created_on = Field()
            service = Field()
            ticket = Field()
            renew = Field()

        auth_cas = auth_cas

        # Table: 'aspectos'
        class aspectos(Table):
            id = Field()
            aspecto = Field()

        aspectos = aspectos

        # Table: 'solicitudes'
        class solicitudes(Table):
            id = Field()
            proyecto = Field()
            archivos = Field()
            estado = Field()
            fecha = Field()
            publico = Field()
            observaciones = Field()
            id_usuario = Field()

        solicitudes = solicitudes

        # Table: 'aspectossolicitud'
        class aspectossolicitud(Table):
            id = Field()
            id_solicitudes = Field()
            id_aspecto = Field()
            evaluacionfinal = Field()

        aspectossolicitud = aspectossolicitud

        # Table: 'expertosasociados'
        class expertosasociados(Table):
            id = Field()
            id_solicitudes = Field()
            id_usuario = Field()

        expertosasociados = expertosasociados

        # Table: 'evaluaciones'
        class evaluaciones(Table):
            id = Field()
            id_solicitudes = Field()
            id_aspectossolicitud = Field()
            id_experto = Field()
            evaluacion = Field()
            evaluacion2 = Field()
            ronda = Field()
            delphi = Field()

        evaluaciones = evaluaciones

        # Table: 'valores'
        class valores(Table):
            id = Field()
            valor = Field()
            idnea = Field()

        valores = valores

        # Table: 'tabla1'
        class tabla1(Table):
            id = Field()
            year = Field()
            azucar = Field()
            cacao = Field()
            cafe = Field()
            copra = Field()

        tabla1 = tabla1

        # Table: 'tabla2'
        class tabla2(Table):
            id = Field()
            producto = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla2 = tabla2

        # Table: 'tabla3'
        class tabla3(Table):
            id = Field()
            producto = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla3 = tabla3

        # Table: 'tabla4'
        class tabla4(Table):
            id = Field()
            producto = Field()
            destino = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla4 = tabla4

        # Table: 'tabla5'
        class tabla5(Table):
            id = Field()
            producto = Field()
            origen = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla5 = tabla5

        # Table: 'tabla6'
        class tabla6(Table):
            id = Field()
            producto = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla6 = tabla6

        # Table: 'tabla7'
        class tabla7(Table):
            id = Field()
            producto = Field()
            year = Field()
            kilogramos = Field()
            valor = Field()

        tabla7 = tabla7


        def select(orderby=None, groupby=None, limitby=None, distinct=False, left=None, cache=None, *columns): return Rows()


        def count(distinct=False): return Rows()

    db = db